name: "Setup SQLite Bimonthly Tests"
on:
  schedule:
    - cron: '0 2 1,15 * *' # trigger rate limit test every 1st and 15th day of the month at 2am

jobs:
  # run the bimonthly unit tests
  bimonthly-unit-test:
    name: Setup SQLite Rate Limit Unit Tests
    needs: bimonthly-test-latest # wait until the bimonthly-test-latest test completed before executing the following tests

    strategy:
      matrix:
        runs-on: [ ubuntu-latest, windows-latest, macos-latest ]
      fail-fast: false

    runs-on: ${{ matrix.runs-on }}

    steps:
    - uses: actions/checkout@v4
    - run: npm ci
    - run: npm run test-bimonthly

  # test setup action works with latest version of SQLite
  bimonthly-test-latest:
    name: Setup Latest SQLite Version Test

    strategy:
      matrix:
        runs-on: [ ubuntu-latest, windows-latest, macos-latest ]
      fail-fast: false

    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm ci
    - run: npm run prepare
    - name: Setup Latest SQLite Version Test
      # use local distribution until we release an official version
      #   ccorsi/setup-sqlite@v1
      uses: ./
    - run: sqlite3 --version
